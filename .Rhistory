# Carregar o pacote metafor
library(metafor)
# Carregar os dados do arquivo CSV
dados <- read.csv("vite1.csv")
dados <- read.csv("vite1.csv")
# Realizar a análise de metanálise para dados categóricos (proporções)
meta_analysis <- metaprop(event = dados$evtto, n = dados$ntto, event.e = dados$evcont, n.e = dados$ncont, method.tau = "REML")
# Carregar o pacote meta
library(meta)
# Carregar os dados do arquivo CSV
dados <- read.csv("vite1.csv")
# Realizar a análise de metanálise para dados categóricos (proporções)
meta_analysis <- metabin(event = dados$evtto, n = dados$ntto, event.e = dados$evcont, n.e = dados$ncont, method = "Inverse", sm = "OR")
# Exibir os resultados da metanálise
summary(meta_analysis)
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
# Criar um data frame com os resultados do Modelo de Efeito Comum e Efeito Aleatório
resultados <- data.frame(
Modelo = c("Efeito Comum", "Efeito Aleatório"),
OR = c(1.0068, 1.0096),
CI_Lower = c(0.9700, 0.9625),
CI_Upper = c(1.0450, 1.0591)
)
# Criar a figura
figura <- ggplot(resultados, aes(x = Modelo, y = OR, ymin = CI_Lower, ymax = CI_Upper)) +
geom_pointrange() +
labs(title = "Resultados do Modelo de Efeito Comum e Efeito Aleatório",
x = "Modelo",
y = "OR") +
theme_minimal()
# Exibir a figura
print(figura)
View(figura)
View(figura)
View(figura)
View(figura)
View(figura)
# Carregar a biblioteca ggplot2
library(ggplot2)
# Criar um data frame com os resultados da metanálise
results <- data.frame(
Estudo = c("Estudo 1", "Estudo 2", "Estudo 3"),
Efeito = c(0.5, 0.8, 1.2),
LimInf = c(0.3, 0.6, 1.0),
LimSup = c(0.7, 1.0, 1.5)
)
# Ordenar os estudos por efeito decrescente
results <- results[order(results$Efeito, decreasing = TRUE), ]
# Criar um gráfico Forest plot
forest_plot <- ggplot(results, aes(x = Efeito, xmin = LimInf, xmax = LimSup, y = Estudo)) +
geom_segment(size = 1.2, aes(xend = Efeito, yend = Estudo)) +
geom_point(size = 3, shape = 23, fill = "black") +
geom_errorbarh(height = 0.2, size = 1.2) +
xlim(c(-2, 2)) +
labs(x = "Efeito", y = "Estudo") +
theme_bw()
# Exibir o gráfico
print(forest_plot)
forest(meta_analysis)
